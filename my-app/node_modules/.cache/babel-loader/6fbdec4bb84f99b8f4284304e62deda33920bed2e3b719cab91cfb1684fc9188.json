{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\Documents\\\\GitHub\\\\Develhope-Exercises\\\\my-app\\\\src\\\\state.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//STATE 01-Exercise\n// class Counter extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             count: 0\n//         };\n//     }\n\n//     componentDidMount() {\n//         this.intervalId = setInterval(() => {\n//             this.setState(prevState => ({\n//                 count: prevState.count + 1\n//             }));\n//        }, 1000);\n//     }\n\n//     componentWillUnmount() {\n//         clearInterval(this.intervalId);\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Count: {this.state.count}</h1>\n//             </div>\n//         );\n//     }\n// }\n\n// STATE 03-Exercise\n// class Counter extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             count: this.props.initialValue\n//         };\n//     }\n\n//     componentDidMount() {\n//         this.intervalId = setInterval(() => {\n//             this.setState(prevState => ({\n//                 count: prevState.count + this.props.incrementAmount\n//             }));\n//         }, this.props.incrementInterval);\n//     }\n\n//     componentWillUnmount() {\n//         clearInterval(this.intervalId);\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Count: {this.state.count}</h1>\n//             </div>\n//         );\n//     }\n// }\n//STATE 04-Exercise\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CounterDisplay(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Count: \", props.count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_c = CounterDisplay;\nfunction Counter(props) {\n  _s();\n  const [count, setCount] = useState(props.initialValue);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount(prevCount => prevCount + props.incrementAmount);\n    }, props.incrementInterval);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [props.incrementAmount, props.incrementInterval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CounterDisplay, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"+F8iDJRHU8PghEGm81XEbJ36mx8=\");\n_c2 = Counter;\nexport default Counter;\nvar _c, _c2;\n$RefreshReg$(_c, \"CounterDisplay\");\n$RefreshReg$(_c2, \"Counter\");","map":{"version":3,"names":["React","useState","useEffect","CounterDisplay","props","count","Counter","setCount","initialValue","intervalId","setInterval","prevCount","incrementAmount","incrementInterval","clearInterval"],"sources":["C:/Users/nicho/Documents/GitHub/Develhope-Exercises/my-app/src/state.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n//STATE 01-Exercise\r\n// class Counter extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             count: 0\r\n//         };\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.intervalId = setInterval(() => {\r\n//             this.setState(prevState => ({\r\n//                 count: prevState.count + 1\r\n//             }));\r\n//        }, 1000);\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         clearInterval(this.intervalId);\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <h1>Count: {this.state.count}</h1>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// STATE 03-Exercise\r\n// class Counter extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             count: this.props.initialValue\r\n//         };\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.intervalId = setInterval(() => {\r\n//             this.setState(prevState => ({\r\n//                 count: prevState.count + this.props.incrementAmount\r\n//             }));\r\n//         }, this.props.incrementInterval);\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         clearInterval(this.intervalId);\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <h1>Count: {this.state.count}</h1>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n//STATE 04-Exercise\r\n\r\n\r\nfunction CounterDisplay(props) {\r\n  return (\r\n    <h1>Count: {props.count}</h1>\r\n  );\r\n}\r\n\r\nfunction Counter(props) {\r\n  const [count, setCount] = useState(props.initialValue);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCount(prevCount => prevCount + props.incrementAmount);\r\n    }, props.incrementInterval);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [props.incrementAmount, props.incrementInterval]);\r\n\r\n  return (\r\n    <div>\r\n      <CounterDisplay count={count} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA,SAASC,cAAc,CAACC,KAAK,EAAE;EAC7B,oBACE;IAAA,WAAI,SAAO,EAACA,KAAK,CAACC,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAEjC;AAAC,KAJQF,cAAc;AAMvB,SAASG,OAAO,CAACF,KAAK,EAAE;EAAA;EACtB,MAAM,CAACC,KAAK,EAAEE,QAAQ,CAAC,GAAGN,QAAQ,CAACG,KAAK,CAACI,YAAY,CAAC;EAEtDN,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,QAAQ,CAACI,SAAS,IAAIA,SAAS,GAAGP,KAAK,CAACQ,eAAe,CAAC;IAC1D,CAAC,EAAER,KAAK,CAACS,iBAAiB,CAAC;IAE3B,OAAO,MAAM;MACXC,aAAa,CAACL,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACL,KAAK,CAACQ,eAAe,EAAER,KAAK,CAACS,iBAAiB,CAAC,CAAC;EAEpD,oBACE;IAAA,uBACE,QAAC,cAAc;MAAC,KAAK,EAAER;IAAM;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEV;AAAC,GAlBQC,OAAO;AAAA,MAAPA,OAAO;AAoBhB,eAAeA,OAAO;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}